version: "3.9"

# Ancla de variables para servicios Laravel (app/queue/scheduler)
x-laravel-env: &laravel_env
  APP_NAME: ${APP_NAME}
  APP_ENV: ${APP_ENV}
  APP_KEY: ${APP_KEY}
  APP_DEBUG: ${APP_DEBUG}
  APP_TIMEZONE: ${APP_TIMEZONE}
  APP_URL: ${APP_URL}
  APP_LOCALE: ${APP_LOCALE}
  APP_FALLBACK_LOCALE: ${APP_FALLBACK_LOCALE}
  APP_FAKER_LOCALE: ${APP_FAKER_LOCALE}
  BCRYPT_ROUNDS: ${BCRYPT_ROUNDS}
  PHP_MEMORY_LIMIT: ${PHP_MEMORY_LIMIT}
  PHP_MAX_EXECUTION_TIME: ${PHP_MAX_EXECUTION_TIME}
  PHP_POST_MAX_SIZE: ${PHP_POST_MAX_SIZE}
  PHP_UPLOAD_MAX_FILESIZE: ${PHP_UPLOAD_MAX_FILESIZE}
  PHP_OPCACHE_VALIDATE_TIMESTAMPS: ${PHP_OPCACHE_VALIDATE_TIMESTAMPS}
  XDEBUG_MODE: ${XDEBUG_MODE}
  DB_CONNECTION: ${DB_CONNECTION}
  DB_HOST: ${DB_HOST}
  DB_PORT: ${DB_PORT}
  DB_DATABASE: ${DB_DATABASE}
  DB_USERNAME: ${DB_USERNAME}
  DB_PASSWORD: ${DB_PASSWORD}
  CACHE_STORE: ${CACHE_STORE}
  CACHE_PREFIX: ${CACHE_PREFIX}
  SESSION_DRIVER: ${SESSION_DRIVER}
  SESSION_LIFETIME: ${SESSION_LIFETIME}
  SESSION_ENCRYPT: ${SESSION_ENCRYPT}
  SESSION_PATH: ${SESSION_PATH}
  SESSION_DOMAIN: ${SESSION_DOMAIN}
  QUEUE_CONNECTION: ${QUEUE_CONNECTION}
  QUEUE_SLEEP: ${QUEUE_SLEEP}
  QUEUE_TRIES: ${QUEUE_TRIES}
  QUEUE_MAX_TIME: ${QUEUE_MAX_TIME}
  QUEUE_TIMEOUT: ${QUEUE_TIMEOUT}
  LOG_CHANNEL: ${LOG_CHANNEL}
  LOG_STACK: ${LOG_STACK}
  LOG_DEPRECATIONS_CHANNEL: ${LOG_DEPRECATIONS_CHANNEL}
  LOG_LEVEL: ${LOG_LEVEL}
  MAIL_MAILER: ${MAIL_MAILER}
  MAIL_HOST: ${MAIL_HOST}
  MAIL_PORT: ${MAIL_PORT}
  MAIL_USERNAME: ${MAIL_USERNAME}
  MAIL_PASSWORD: ${MAIL_PASSWORD}
  MAIL_ENCRYPTION: ${MAIL_ENCRYPTION}
  MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
  MAIL_FROM_NAME: ${MAIL_FROM_NAME}
  BROADCAST_CONNECTION: ${BROADCAST_CONNECTION}
  FILESYSTEM_DISK: ${FILESYSTEM_DISK}
  REDIS_CLIENT: ${REDIS_CLIENT}
  REDIS_HOST: ${REDIS_HOST}
  REDIS_PASSWORD: ${REDIS_PASSWORD}
  REDIS_PORT: ${REDIS_PORT}
  REDIS_DB: ${REDIS_DB}
  REDIS_CACHE_DB: ${REDIS_CACHE_DB}
  REDIS_QUEUE_DB: ${REDIS_QUEUE_DB}
  VITE_APP_NAME: ${VITE_APP_NAME}
  NODE_ENV: ${NODE_ENV}
  NGINX_CLIENT_MAX_BODY_SIZE: ${NGINX_CLIENT_MAX_BODY_SIZE}
  NGINX_FASTCGI_READ_TIMEOUT: ${NGINX_FASTCGI_READ_TIMEOUT}
  NGINX_WORKER_CONNECTIONS: ${NGINX_WORKER_CONNECTIONS}
  SUPERVISOR_LOG_LEVEL: ${SUPERVISOR_LOG_LEVEL}

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile.dev
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    container_name: ${DOCKER_APP_CONTAINER:-almex_app}
    restart: unless-stopped
    working_dir: /var/www/html
    environment:
      <<: *laravel_env
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: "1"
    # ⚠️ En Portainer (deploy desde Git) evita este bind:
    # volumes:
    #   - ./:/var/www/html
    volumes:
      - php-vendor:/var/www/html/vendor
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini:ro
    networks:
      - almex_network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  web:
    image: nginx:1.27-alpine
    container_name: ${DOCKER_WEB_CONTAINER:-almex_web}
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8000}:80"
    # ⚠️ Si NO montas el código, agrega un volume con el build output o COPY en tu imagen PHP
    # volumes:
    #   - ./:/var/www/html:ro
    volumes:
      - ./storage:/var/www/html/storage:rw
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - almex_network
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  npm:
    image: node:20-alpine
    container_name: ${DOCKER_VITE_CONTAINER:-almex_vite}
    working_dir: /var/www/html
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 5173"
    ports:
      - "${VITE_PORT:-5173}:5173"
    # volumes:
    #   - ./:/var/www/html
    volumes:
      - node_modules:/var/www/html/node_modules
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      VITE_APP_NAME: ${VITE_APP_NAME}
    networks:
      - almex_network
    depends_on:
      - app

  mysql:
    image: mysql:8.0
    container_name: ${DOCKER_MYSQL_CONTAINER:-almex_mysql}
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-almex_maintenance_tracker_admin}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-secret}
      MYSQL_USER: ${DB_USERNAME:-almex}
      MYSQL_PASSWORD: ${DB_PASSWORD:-almex}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    networks:
      - almex_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-secret}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: ${DOCKER_REDIS_CONTAINER:-almex_redis}
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_secret}
    volumes:
      - redis-data:/data
    networks:
      - almex_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  queue:
    build:
      context: .
      dockerfile: docker/php/Dockerfile.dev
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    container_name: ${DOCKER_QUEUE_CONTAINER:-almex_queue}
    restart: unless-stopped
    working_dir: /var/www/html
    command: php artisan queue:work --sleep=${QUEUE_SLEEP:-3} --tries=${QUEUE_TRIES:-3} --max-time=${QUEUE_MAX_TIME:-3600} --timeout=${QUEUE_TIMEOUT:-300}
    environment:
      <<: *laravel_env
    # volumes:
    #   - ./:/var/www/html
    volumes:
      - php-vendor:/var/www/html/vendor
    networks:
      - almex_network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "ps", "aux", "|", "grep", "[q]ueue:work"]
      interval: 30s
      timeout: 10s
      retries: 3

  scheduler:
    build:
      context: .
      dockerfile: docker/php/Dockerfile.dev
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    container_name: ${DOCKER_SCHEDULER_CONTAINER:-almex_scheduler}
    restart: unless-stopped
    working_dir: /var/www/html
    command: sh -c "while true; do php artisan schedule:run --verbose --no-interaction & sleep 60; done"
    environment:
      <<: *laravel_env
    # volumes:
    #   - ./:/var/www/html
    volumes:
      - php-vendor:/var/www/html/vendor
    networks:
      - almex_network
    depends_on:
      mysql:
        condition: service_healthy

networks:
  almex_network:
    driver: bridge

volumes:
  php-vendor:
    driver: local
  node_modules:
    driver: local
  mysql-data:
    driver: local
  redis-data:
    driver: local
