services:
    app:
        build:
            context: .
            dockerfile: docker/php/Dockerfile.dev
            args:
                USER_ID: ${USER_ID:-1000}
                GROUP_ID: ${GROUP_ID:-1000}
        container_name: almex_app
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
            - php-vendor:/var/www/html/vendor
            - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini:ro
        env_file:
            - .env
        environment:
            PHP_OPCACHE_VALIDATE_TIMESTAMPS: "1"
            XDEBUG_MODE: ${XDEBUG_MODE:-off}
        networks:
            - almex_network
        depends_on:
            - mysql
            - redis

    web:
        image: nginx:1.27-alpine
        container_name: almex_web
        restart: unless-stopped
        ports:
            - "${APP_PORT:-8000}:80"
        volumes:
            - ./:/var/www/html:ro
            - ./storage:/var/www/html/storage:rw
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
            - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        networks:
            - almex_network
        depends_on:
            - app
        healthcheck:
            test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
            interval: 10s
            timeout: 5s
            retries: 3
            start_period: 10s

    npm:
        image: node:20-alpine
        container_name: almex_vite
        working_dir: /var/www/html
        command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 5173"
        ports:
            - "${VITE_PORT:-5173}:5173"
        volumes:
            - ./:/var/www/html
            - node_modules:/var/www/html/node_modules
        environment:
            NODE_ENV: development
        networks:
            - almex_network
        depends_on:
            - app

    mysql:
        image: mysql:8.0
        container_name: almex_mysql
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE:-almex_maintenance_tracker_admin}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-secret}
            MYSQL_USER: ${DB_USERNAME:-almex}
            MYSQL_PASSWORD: ${DB_PASSWORD:-almex}
        volumes:
            - mysql-data:/var/lib/mysql
            - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
        networks:
            - almex_network
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-secret}"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s
        # Solo exponer en desarrollo si necesitas acceso directo
        # ports:
        #   - "3306:3306"

    redis:
        image: redis:7-alpine
        container_name: almex_redis
        restart: unless-stopped
        command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_secret}
        volumes:
            - redis-data:/data
        networks:
            - almex_network
        healthcheck:
            test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        # Solo exponer en desarrollo si necesitas acceso directo
        # ports:
        #   - "6379:6379"

    queue:
        build:
            context: .
            dockerfile: docker/php/Dockerfile.dev
            args:
                USER_ID: ${USER_ID:-1000}
                GROUP_ID: ${GROUP_ID:-1000}
        container_name: almex_queue
        restart: unless-stopped
        working_dir: /var/www/html
        command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600 --timeout=300
        volumes:
            - ./:/var/www/html
            - php-vendor:/var/www/html/vendor
        env_file:
            - .env
        networks:
            - almex_network
        depends_on:
            - mysql
            - redis
        healthcheck:
            test: ["CMD", "ps", "aux", "|", "grep", "[q]ueue:work"]
            interval: 30s
            timeout: 10s
            retries: 3

    scheduler:
        build:
            context: .
            dockerfile: docker/php/Dockerfile.dev
            args:
                USER_ID: ${USER_ID:-1000}
                GROUP_ID: ${GROUP_ID:-1000}
        container_name: almex_scheduler
        restart: unless-stopped
        working_dir: /var/www/html
        command: sh -c "while true; do php artisan schedule:run --verbose --no-interaction & sleep 60; done"
        volumes:
            - ./:/var/www/html
            - php-vendor:/var/www/html/vendor
        env_file:
            - .env
        networks:
            - almex_network
        depends_on:
            - mysql

networks:
    almex_network:
        driver: bridge

volumes:
    php-vendor:
        driver: local
    node_modules:
        driver: local
    mysql-data:
        driver: local
    redis-data:
        driver: local
